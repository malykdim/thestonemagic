{"version":3,"sources":["components/parts/Navbar.js","components/layouts/Header.js","components/pages/logo.svg","components/pages/Home.jsx","services/api.js","components/parts/Card.jsx","components/pages/Gallery.jsx","services/galleryService.js","components/pages/Contact.jsx","components/pages/Login.jsx","components/pages/Edit.jsx","components/pages/Panneaux.js","components/parts/Logo.js","components/layouts/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","to","this","icon","Component","defaultProps","Header","title","Home","state","mosaics","href","target","rel","src","logo","alt","result","gallery","Card","match","caption","picture","gridClass","author","url","created","dimensions","clickHandler","useState","mosaicPreview","split","console","log","Gallery","id","fetch","api","then","res","json","catch","error","setState","length","map","card","Contact","onSubmit","e","preventDefault","inputFullName","fullName","value","inputEmail","email","inputTopic","topic","inputContent","content","htmlFor","type","name","placeholder","cols","rows","Login","onClick","toggle","inputPassword","pass","Edit","panneauxName","onChangeHandler","bind","inputPanneauxName","inputAuthor","inputDate","inputWidth","width","inputHeight","height","inputUnit","unit","toLowerCase","description","materials","JSON","stringify","onSubmitEditHandler","onChange","defaultValue","path","component","Panneaux","mosaic","Logo","Footer","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7bb9daf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { NavLink } from 'react-router-dom' ;\r\nimport './Navbar.scss';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    static defaultProps = {\r\n        icon: 'fas fa-home'\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <nav className=\"AppHeader-Nav\">\r\n                <ul className=\"AppHeader-Nav-Ul\">\r\n                    <li>\r\n                        <NavLink to=\"/\" >\r\n                            <i className={this.props.icon}></i>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/gallery\" >\r\n                            Gallery\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/contact\" >\r\n                            Contact\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","// import Logo from './Logo.js';\r\nimport Navbar from '../parts/Navbar.js';\r\nimport  './Header.scss';\r\n\r\nconst Header = (props) => {\r\n    \r\n    return (\r\n        <header className=\"AppHeader\">\r\n            \r\n            <h1>{props.title}</h1>\r\n            <Navbar icon=\"fas fa-home\"/>    \r\n        </header>    \r\n    )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/logo.ff30ce05.svg\";","import { Component } from 'react';\r\nimport logo from './logo.svg';\r\n// import Picture from './components/parts/Picture';\r\n// import Gallery from './Gallery';\r\nimport  './Home.scss';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            mosaics: [],\r\n            // onHover() {\r\n            //     console.log('animation ends');\r\n            // }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <main className=\"AppMain\">\r\n                <h2>\r\n                    Exquisite Mosaic Panneaux <br/>\r\n                    made by<br/>\r\n                    <a className=\"AppLink\" href=\"https://www.facebook.com/vladimir.damynov/\" target=\"_blank\"  rel=\"noopener noreferrer\" >\r\n                        <span>Vladimir Damyanov</span>\r\n                    </a>\r\n                    and\r\n                    <a className=\"AppLink\" href=\"https://www.facebook.com/damyan.damyanov.509/\" target=\"_blank\"  rel=\"noopener noreferrer\" >\r\n                    <span>Damyan Damyanov</span>\r\n                    </a>            \r\n                </h2>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    In Development Stage...\r\n                </p>   \r\n                    \r\n            </main>    \r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Home;","const baseUrl = 'http://localhost:5000';\r\n\r\nconst result = {\r\n    gallery: `${baseUrl}/gallery`\r\n};\r\n\r\nexport default result;\r\n","import { useState, useEffect} from 'react';\r\nimport * as galleryService from '../../services/galleryService';\r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport './Card.scss';\r\n\r\nconst Card = ({\r\n    match,\r\n    caption,\r\n    picture,\r\n    gridClass,\r\n    author,\r\n    created,\r\n    dimensions,\r\n    clickHandler,\r\n    url\r\n}) => {\r\n    let [expanded, setExpanded] = useState(null);    \r\n    let [card, setCard] = useState({});\r\n    \r\n    // useEffect(() => {\r\n    //     galleryService.getOne(match.params.id)\r\n    //     .then(res => setCard(res));\r\n    // }, [match]);\r\n    const mosaicPreview = url.split('/gallery/');\r\n    console.log(mosaicPreview);\r\n    \r\n    return(\r\n        <div className={gridClass}> \r\n                <figure className=\"Figure\"> \r\n                    <div className=\"image-container\"> \r\n                        <Link to={url} > \r\n                            <img src={picture} alt={caption} />\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                    <figcaption> \r\n                    \"{caption}\" by {author}                       \r\n                    </figcaption>\r\n                </figure>\r\n            {/* <div className=\"Card-Description\" >\r\n                <p className=\"created\">\r\n                    {created}\r\n                </p>\r\n                <p className=\"dimensions\">\r\n                    {dimensions}\r\n                </p>\r\n            </div>\r\n            {expanded === 1 && <h1>it works</h1>} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","\r\nimport { Component } from 'react';\r\nimport * as galleryService from '../../services/galleryService';\r\nimport Card from '../parts/Card';\r\nimport './Gallery.scss';\r\n\r\nclass Gallery extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n            \r\n            this.state = { // 1, 5\r\n                gallery: []\r\n            }\r\n            \r\n            // props.match.params.mosaicName\r\n        }\r\n        \r\n        cardClicked(id) {\r\n            console.log(`Implement overlay for each ${id}!`);\r\n        }\r\n        \r\n        componentDidMount() { // 3\r\n            galleryService.getAll()\r\n            .then(res => \r\n                this.setState({gallery: res}) \r\n            );\r\n        }\r\n        \r\n        render() { // 2, 6\r\n            \r\n            if (this.state.gallery.length === 0) {\r\n                return <span>Loading Gallery...</span>\r\n            }\r\n            \r\n            return ( \r\n                <main className=\"AppMain\">\r\n                    <h2>Gallery</h2>\r\n                    <section className=\"AppMain-Gallery\"> {/* container */}\r\n                    {this.state.gallery.map((card) => \r\n                        <Card \r\n                            key={card.id}\r\n                            gridClass={card.gridClass}\r\n                            {...card} \r\n                            // clickHandler={() => this.cardClicked(card.caption)}\r\n                        /> // 7\r\n                    )}\r\n                    </section>\r\n                    \r\n                    <p>\r\n                        In Development Stage...\r\n                    </p>\r\n                    \r\n                </main>                \r\n            )\r\n        }            \r\n}\r\n\r\nexport default Gallery;","import api from './api';\r\n\r\nconst url = 'http://localhost:5000/gallery';\r\n\r\nexport const getPictures = () => {\r\n    return fetch(api.pictures)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport const getAll = () => {\r\n    return fetch(api.gallery)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport const getOne = (id) => {\r\n    return fetch(`${url}/${id}`)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error));\r\n}","import { Component } from 'react';\r\nimport { Route} from 'react-router-dom' ;\r\nimport '../main.scss';\r\nimport './Contact.scss';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const onSubmitContactHandler = (e) => {\r\n            e.preventDefault();\r\n            const inputFullName = e.target.fullName.value;\r\n            const inputEmail = e.target.email.value;\r\n            const inputTopic = e.target.topic.value;\r\n            const inputContent = e.target.content.value;\r\n            console.log(inputFullName);\r\n            console.log(inputEmail);\r\n            console.log(inputTopic);\r\n            console.log(inputContent);\r\n        }\r\n        \r\n        \r\n        return (\r\n            <main className=\"AppMain\">\r\n                <h2>Contact Page</h2>\r\n                \r\n                <form  onSubmit={onSubmitContactHandler} className=\"AppMain-FormContact form\">\r\n                    <fieldset>\r\n                        <label htmlFor=\"fullName\">Name</label>\r\n                        <input type=\"text\" id=\"fullName\" name=\"fullName\" placeholder=\"Full Name\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"topic\">Topic</label>\r\n                        <input type=\"text\" id=\"topic\" name=\"topic\" placeholder=\"Topic\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <textarea name=\"content\" id=\"content\" cols=\"75\" rows=\"12\"></textarea>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <input type=\"submit\" className=\"send\" value=\"Send\"/>\r\n                    </fieldset>    \r\n                </form>\r\n                \r\n                <p>\r\n                In Development Stage...\r\n                </p>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import { Link } from 'react-router-dom' ;\r\n// import Edit from './Edit' ;\r\n\r\nimport '../main.scss';\r\nimport './Login.scss';\r\n\r\nconst Login = () => {\r\n    \r\n    function toggle() {\r\n        // hide the Register button\r\n        // the Register form \r\n        // validate the input\r\n        // show the submit button below \r\n    }\r\n    \r\n    /* function login() {\r\n        // after successfull authentication\r\n        return (\r\n            <Link path=\"/edit\" component={Edit}/>\r\n        )\r\n    } */\r\n    \r\n    const onSubmitLoginHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const inputEmail = e.target.email.value;\r\n        const inputPassword = e.target.pass.value;\r\n        \r\n        \r\n        console.log(inputEmail);\r\n        console.log(inputPassword);\r\n    }\r\n    \r\n    return (\r\n        <main className=\"AppMain\">\r\n            \r\n            <h2>Login</h2>\r\n            \r\n                \r\n            <div className=\"AppMain-Forms\">\r\n                \r\n                <form  className=\"FormRegister form\">\r\n                    <fieldset>\r\n                        <label htmlFor=\"fullName\">Full Name</label>\r\n                        <input type=\"text\" name=\"fullName\" id=\"fullName\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\" name=\"email\" id=\"email\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"pass\">Password</label>\r\n                        <input type=\"text\" name=\"pass\" id=\"pass\" placeholder=\"\" />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"pass\"></label>\r\n                        <input type=\"text\" name=\"pass\" placeholder=\"\" />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button className=\"toggle\" /* onClick={login()} */>\r\n                            Register\r\n                        </button>\r\n                        \r\n                        <button className=\"toggle\" onClick={toggle()}>\r\n                            Register\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n                \r\n                <form onSubmit={onSubmitLoginHandler} className=\"FormLogin form\">\r\n                    <fieldset>\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"someone@somewhere.com\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor=\"pass\">Password:</label>\r\n                        <input type=\"text\" id=\"pass\" name=\"pass\" placeholder=\"********\"/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button className=\"toggle\" /* onClick={toggle()} */>\r\n                        Login\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n                \r\n            </div>              \r\n            \r\n            <Link to=\"/edit\" className=\"Edit\">Edit</Link>\r\n            \r\n            <p>\r\n                In Development Stage...\r\n            </p>\r\n            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login;","import { Component } from 'react' ;\r\nimport { Route } from 'react-router-dom' ;\r\nimport Gallery from './Gallery' ;\r\n\r\nimport '../main.scss';\r\nimport './Edit.scss';\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            panneauxName: 'New Panneaux',\r\n        }\r\n        \r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n    \r\n    onSubmitEditHandler(e) {\r\n        e.preventDefault();\r\n        \r\n        const inputPanneauxName = e.target.panneauxName.value;\r\n        const inputAuthor = e.target.author.value;\r\n        const inputDate = e.target.created.value;\r\n        const inputWidth = e.target.width.value;\r\n        const inputHeight = e.target.height.value;\r\n        const inputUnit = e.target.unit.value;\r\n        // const gridClass = (inputWidth, inputHeight, inputUnit) => {\r\n        //     if ((inputWidth) === (inputHeight)) {\r\n        //         const gridClass = 'w-1 h-1';\r\n        //         return gridClass;\r\n        //     } else if ((inputWidth) > (inputHeight)) {\r\n        //         const gridClass = 'w-2 h-1';\r\n        //         return gridClass;\r\n        //     } else if ((inputWidth) < (inputHeight)) {\r\n        //         const gridClass = 'w-1 h-2';\r\n        //         return gridClass;\r\n        //     }\r\n        // }\r\n        const inputMaterials = [];\r\n        \r\n        const data = {\r\n            url: `/gallery/${inputPanneauxName.toLowerCase()}`,\r\n            caption: inputPanneauxName,\r\n            author: inputAuthor,\r\n            description: {\r\n                created: inputDate,\r\n                dimensions: {\r\n                    width: inputWidth,\r\n                    height: inputHeight,\r\n                    unit: inputUnit\r\n                },\r\n                materials: [...inputMaterials]\r\n            },\r\n            // gridClass: gridClass()\r\n        }\r\n        \r\n        const result = data.JSON.stringify;\r\n        return result;\r\n    };\r\n    \r\n    onSubmitChangeHandler(e) {\r\n        console.log(e.target.value);\r\n        this.setState=({\r\n            panneauxName: e.target.value\r\n        });\r\n    };\r\n    \r\n    onChangeHandler(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n    \r\n    // logout(e) {\r\n    //     console.log('Logout');\r\n    // };\r\n        \r\n    render() {\r\n\r\n        \r\n        \r\n        \r\n        \r\n        return (\r\n            <main className=\"AppMain\">\r\n                \r\n                <h2>Edit Page</h2>\r\n                \r\n                <form onSubmit={this.onSubmitEditHandler} className=\"FormEdit form\">\r\n                    \r\n                    \r\n                    <fieldset className=\"left w-1 h-3\">\r\n                        <label htmlFor=\"uploadPicture\">Добави снимка</label>\r\n                        <input type=\"file\" id=\"picture\" name=\"uploadPicture\" /* onChange={this.onSubmitChangeHandler} */ />\r\n                        {/* <input type=\"submit\" value=\"Submit\"> */}\r\n                    </fieldset>\r\n                    \r\n                    <div className=\"middle\">\r\n                        <fieldset className=\"right\">\r\n                        <label htmlFor=\"panneauxName\">Име на Паното</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"panneauxName\" \r\n                            name=\"panneauxName\" \r\n                            value={this.state.panneauxName} \r\n                            onChange={this.onChangeHandler} \r\n                            placeholder=\"text\"\r\n                        />\r\n                        \r\n                        </fieldset>\r\n                        <fieldset className=\"inline\">\r\n                            <span>Автор</span>                                \r\n                            <input type=\"radio\" id=\"vladimir\" name=\"author\" value=\"Vladimir\"/>                        \r\n                            <label htmlFor=\"vladimir\">Владимир</label>                                \r\n                            <input type=\"radio\" id=\"damyan\" name=\"author\" value=\"Damyan\"/>\r\n                            <label htmlFor=\"damyan\">Дамян</label>\r\n                            <input type=\"radio\" id=\"konstantin\" name=\"author\" value=\"Konstantin\"/>\r\n                            <label htmlFor=\"konstantin\">Константин</label>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <label htmlFor=\"created\">Създадена</label>\r\n                            <input type=\"date\" name=\"created\" id=\"created\"/>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <legend>Размери на паното</legend>\r\n                            <label htmlFor=\"width\">Широчина</label>\r\n                            <input type=\"number\" name=\"width\" defaultValue=\"75\" id=\"width\" placeholder=\"number\"/>\r\n                            <label htmlFor=\"height\">Височина</label>\r\n                            <input type=\"number\" name=\"height\" defaultValue=\"75\" id=\"height\" placeholder=\"number\"/>\r\n                            \r\n                            <input type=\"radio\" id=\"cm\" name=\"unit\" value=\"cm\"/>\r\n                            <label htmlFor=\"cm\">cm</label>\r\n                            \r\n                            <input type=\"radio\" id=\"inch\" name=\"unit\" value=\"inch\"/>\r\n                            <label htmlFor=\"inch\">inch</label>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <legend>Използвани материали:</legend>\r\n                            <input type=\"checkbox\" id=\"marbel\" name=\"marbel\" value=\"Marbel\"/>\r\n                            <label htmlFor=\"marbel\">Мрамор </label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"mountain crystal\" name=\"mountain crystal\" value=\"Mountain crystal\"/>\r\n                            <label htmlFor=\"mountain crystal\">Планински кристал</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"amethyst\" name=\"amethyst\" value=\"Аmethyst\"/>\r\n                            <label htmlFor=\"amethyst\">Аметист</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"jasper\" name=\"jasper\" value=\"Jasper\"/>\r\n                            <label htmlFor=\"jasper\">Яспис</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"labrador\" name=\"labrador\" value=\"Labrador\"/>\r\n                            <label htmlFor=\"labrador\">Лабрадор</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"pyryt\" name=\"pyryt\" value=\"Pyryt\"/>\r\n                            <label htmlFor=\"pyryt\">Пирит</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"tiger's eye\" name=\"tiger's eye\" value=\"Tiger's eye\"/>\r\n                            <label htmlFor=\"tiger's eye\">Тигрово око</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"firestone\" name=\"firestone\" value=\"Firestone\"/>\r\n                            <label htmlFor=\"firestone\">Огнен камък</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"onyx\" name=\"onyx\" value=\"Onyx\"/>\r\n                            <label htmlFor=\"onyx\">Оникс</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"jade\" name=\"jade\" value=\"Jade\"/>\r\n                            <label htmlFor=\"jade\">Нефрит</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"malachite\" name=\"malachite\" value=\"malachite\"/>\r\n                            <label htmlFor=\"malachite\">Малахит</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"citrine\" name=\"citrine\" value=\"citrine\"/>\r\n                            <label htmlFor=\"citrine\">Цитрин</label>\r\n\r\n                            <input type=\"checkbox\" id=\"obsidian\" name=\"obsidian\" value=\"obsidian\"/>\r\n                            <label htmlFor=\"obsidian\">Обсидиан</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"serpentine\" name=\"serpentine\" value=\"serpentine\"/>\r\n                            <label htmlFor=\"serpentine\">Серпентин</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"quartz\" name=\"quartz\" value=\"quartz\"/>\r\n                            <label htmlFor=\"quartz\">Кварц</label>\r\n                            \r\n                            <input type=\"checkbox\" id=\"agate\" name=\"agate\" value=\"Аgate\"/>\r\n                            <label htmlFor=\"agate\">Ахат</label>\r\n                            <br/>\r\n                        </fieldset>\r\n                    </div>\r\n                    \r\n                    <fieldset className=\" right w-1 h-3 flexColumn \">\r\n                        <div className=\"flexRow\">\r\n                            <input type=\"reset\" name=\"reset\" value=\"Изчисти\"/>\r\n                            <label htmlFor=\"reset\">\r\n                                Изчисти формата\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"flexRow\">\r\n                            <input type=\"reset\" name=\"edit\" value=\"Редактирай\"/>\r\n                            <label htmlFor=\"edit\">\r\n                                Редактирай данните\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"flexRow\">\r\n                            <input type=\"reset\" name=\"add\" value=\"Добави\"/>\r\n                            <label htmlFor=\"add\">\r\n                                Добави паното в галерията\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"flexRow\">\r\n                            <input type=\"reset\" name=\"delete\" value=\"Изтрий\"/>\r\n                            <label htmlFor=\"delete\">\r\n                                Изтрий паното от галерията\r\n                            </label>\r\n                        </div>\r\n                    </fieldset>\r\n                    \r\n                </form>\r\n                \r\n                <button /* onClick={logout} */ className=\"logout\">\r\n                    Logout\r\n                </button>\r\n                \r\n                <Route path=\"/gallery\" component={Gallery}/>\r\n                \r\n                <p>\r\n                    In Development Stage...\r\n                </p>\r\n                \r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","import { Component } from 'react';\r\nimport * as galleryService from '../../services/galleryService';\r\n\r\nimport  './Panneaux.scss';\r\n\r\nclass Panneaux extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = { // 1, 5\r\n            mosaic: {}\r\n        }\r\n        \r\n        // props.match.params.mosaicName\r\n    }\r\n    \r\n    componentDidMount() { // 3\r\n        galleryService.getOne()\r\n        .then(res => \r\n            this.setState({mosaic: res}) \r\n        );\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.mosaic.length === 0) {\r\n            return <span>Loading Panneaux...</span>\r\n        }\r\n        \r\n        return (\r\n            <main className=\"AppMain\">\r\n                \r\n                <h2>Exquisite Mosaic Panneaux</h2>\r\n                \r\n                <section className=\"AppMain-Panneaux\"> \r\n                \r\n                <div className=\"PanneauxDescriptionContainer w-1 h-3\">\r\n                        <h3 className=\"caption\">Sun {/* {mosaic.caption} */}</h3>\r\n                        <span>by</span>\r\n                        <h3 className=\"author\">Vladimir Damyanov {/* {mosaic.author} */}</h3>\r\n                        <p className=\"created\">2019 {/* {mosaic.created} */}</p>\r\n                    </div>\r\n                \r\n                    <div className=\"PanneauxImageContainer w-4 h-3\">\r\n                        <div className=\"imageWrapper\">\r\n                            <img src=\"#\"/* {mosaic.picture} */ alt=\"mosaic\"/* {mosaic.caption} */ />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"PanneauxDescriptionContainer w-1 h-3\">\r\n                        <p className=\"dimensions\">75cm x 75cm {/* {mosaic.dimensions} */}</p>\r\n                        <p className=\"materials\">Materials used {/* {mosaic.materials} */}</p>\r\n                        <span>agate, marbel, malachite, labrador, mountain crystal, citrine</span>\r\n                    </div>\r\n                    \r\n                </section>\r\n                \r\n                <p>\r\n                    In Development Stage...\r\n                </p>\r\n                        \r\n            </main>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default Panneaux;","import  './Logo.scss';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"Logo\">\r\n            <img src=\"/images/logo.png\" alt=\"logo\" />\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Logo;","import Logo from  '../parts/Logo';\r\nimport { Link } from 'react-router-dom';\r\nimport  './Footer.scss';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer  className=\"AppFooter\">\r\n            <Logo />\r\n            <p>\r\n                &copy; All rights reserved\r\n            </p>\r\n            <Link to=\"/login\" className=\"Login\">\r\n                {/* Login */}\r\n                <i className={props.icon}></i>\r\n                                \r\n            </Link>   \r\n        </footer>    \r\n    )\r\n}\r\n\r\nexport default Footer;","import { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom' ;\r\n\r\n// import * as galleryService from './services/galleryService';\r\nimport  './App.scss';\r\n\r\nimport Header from './components/layouts/Header';\r\nimport Home from './components/pages/Home';\r\nimport Gallery from './components/pages/Gallery';\r\nimport Contact from './components/pages/Contact';\r\nimport Login from './components/pages/Login';\r\nimport Edit from './components/pages/Edit';\r\nimport Panneaux from './components/pages/Panneaux';\r\nimport Footer from './components/layouts/Footer';\r\n\r\nclass App extends Component {\r\n    \r\n    //     this.onMenuItemClick = this.onMenuItemClick.bind(this);\r\n    // }\r\n    \r\n    \r\n    // onMenuItemClick(id) {\r\n    //     this.setState({selectedMosaic: id});\r\n    // }\r\n    \r\n    // getMosaic() {\r\n    //     if(!this.state.selectedMosaic) {\r\n    //         return this.state.mosaics;\r\n    //     } else {\r\n    //         return [this.state.mosaics.find(m => m.id === this.state.selectedMosaic)];\r\n    //     }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header title=\"The Stone Magic\"/>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home}>\r\n                        {/* <Home pictures={this.getMosaic()}/> */}\r\n                    </Route> \r\n                    <Route path=\"/thestonemagic\" component={Home} />\r\n                    <Route path=\"/gallery\" exact component={Gallery}/>\r\n                    <Route path=\"/contact\" component={Contact} />\r\n                    <Route path=\"/login\" component={Login} />                    \r\n                    <Route path=\"/edit\" component={Edit} />                    \r\n                    <Route path=\"/gallery/:url\" exact component={Panneaux}/>\r\n                </Switch>                \r\n                <Footer icon=\"fas fa-sign-in-alt\"/>        \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}